name: CI

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

env:
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  build:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        node-version: [20.x]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache pnpm modules
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - uses: pnpm/action-setup@v3
        with:
          version: 9.6.0
          run_install: false
      - name: Set pnpm store path
        run: |
          pnpm config set store-dir ~/.pnpm-store --global
      - name: Install Dependencies
        run: |
          pnpm install
          # if [ "$RUNNER_OS" == "Windows" ]; then
            # Windows needs to use Electron 29 because of https://github.com/webdriverio-community/wdio-electron-service/issues/600
            # pnpm run ci:init-windows
            # pnpm install --no-frozen-lockfile
          # fi
        shell: bash
      - name: Run Tests
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            # Run tasks in serial on Ubuntu to avoid Xvfb issues
            pnpm run ci-linux
          else
            pnpm run ci
          fi
        shell: bash
      - name: Run OS-specific Tests
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            pnpm run ci:e2e:clean
            pnpm install --no-frozen-lockfile
            pnpm run ci:e2e:mac-universal
          fi
        shell: bash
      - name: üêõ Show logs
        if: failure()
        run: |
          pnpm run ci:e2e:logs
      - name: üêõ Debug Build
        uses: stateful/vscode-server-action@v1.1.0
        if: failure()
        with:
          timeout: '180000'
  build-windows:
    name: Build & Test Split
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        test: ['units', 'e2e:no-binary', 'e2e:builder-cjs', 'e2e:builder-esm', 'e2e:forge-cjs', 'e2e:forge-esm']
        node-version: [20.x]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache pnpm modules
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - uses: pnpm/action-setup@v3
        with:
          version: 9.6.0
          run_install: false
      - name: Set pnpm store path
        run: |
          pnpm config set store-dir ~/.pnpm-store --global
      - name: Install Dependencies
        run: |
          pnpm install
        shell: bash
      - name: Run Tests
        run: |
          pnpm run build
          pnpm run ci-windows:${{ matrix.test }}
        shell: bash
      - name: üêõ Show logs
        if: failure()
        run: |
          pnpm run ci:e2e:logs
      - name: üêõ Debug Build
        uses: stateful/vscode-server-action@v1.1.0
        if: failure()
        with:
          timeout: '180000'
